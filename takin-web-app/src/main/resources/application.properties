##########待配置项##########
# mysql配置
# 填写mysql的ip
resource.mysql.host=127.0.0.1
# 填写mysql的端口
resource.mysql.port=3306
# 填写的mysql用户
resource.mysql.username=takin
# 填写的mysql密码
resource.mysql.password=takin
# redis配置
# 填写redis的ip
resource.redis.host=127.0.0.1
# 填写redis的端口
resource.redis.port=6379
# 填写redis的密码
resource.redis.password=takin
# influxdb配置
# 填写influxdb的ip
resource.influxdb.host=127.0.0.1
# 填写influxdb的端口
resource.influxdb.port=8086
# 填写influxdb的用户
resource.influxdb.user=pradar
# 填写influxdb的密码
resource.influxdb.password=pradar

# agent交互的zk地址
# 填写zk的集群配置或单机配置 ip:port的方式，多个用,号隔开
takin.pradar.zk.server=127.0.1:2181
# 与takin.pradar.zk.server一致
takin.config.zk.url=127.0.1:2181
# amdb组件提供的请求地址 ip:port方式
amdb.out.url=127.0.0.1:10032
# takin-web的url ip:port方式
takin-web.out.url=127.0.0.1:10008
# takin-cloud的url ip:port的方式
takin-cloud.out.url=127.0.0.1:10010
# 文件上传目录
data.path=/

##########无需配置##########
# 服务访问端口
server.port=10008
# 服务访问前缀
server.servlet.context-path=/takin-web
#请注意:在配置值仅仅代表一个无用的字符串，不含有激活环境变量的意思，在下次更新会去除！
spring.profiles.active=local

# 数据库配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://${resource.mysql.host:127.0.0.1}:${resource.mysql.port:3306}/trodb?useUnicode=true&characterEncoding=UTF-8&useSSL=false&allowMultiQueries=true
spring.datasource.username=${resource.mysql.username}
spring.datasource.password=${resource.mysql.password}
# druid配置
# 检查池中的连接是否仍可用的 SQL 语句,drui会连接到数据库执行该SQL
spring.datasource.druid.validationQuery=select 'x'
# 当程序请求连接，池在分配连接时，是否先检查该连接是否有效
spring.datasource.druid.testWhileIdle=true
# 程序 申请 连接时,进行连接有效性检查
spring.datasource.druid.testOnBorrow=false
# 开启缓存SQL结果
spring.datasource.druid.poolPreparedStatements=true
# 每个连接最多缓存多少个SQL
spring.datasource.druid.maxPoolPreparedStatementPerConnectionSize=20
# 配置插件
spring.datasource.druid.filters=stat,wall,slf4j
# 连接属性
spring.datasource.druid.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 初始化线程池连接个数
spring.datasource.druid.initial-size=10
# 最小空闲连接10
spring.datasource.druid.min-idle=10
# 最大连接数200
spring.datasource.druid.max-active=200
# 最大等待时间，单位毫秒
spring.datasource.druid.max-wait=60000
# 检查空闲连接的频率，单位毫秒, 非正整数时表示不进行检查
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 连接池中某个连接的空闲时长达到 N 毫秒后, 连接池在下次检查空闲连接时，将回收该连接,要小于防火墙超时设置
spring.datasource.druid.min-evictable-idle-time-millis=300000

# redis配置
spring.redis.host=${resource.redis.host:127.0.0.1}
spring.redis.port=${resource.redis.port:6379}
spring.redis.password=${resource.redis.password}
# 设置redis超时时间
spring.redis.timeout=10000
# jedis连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# jedis连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=10
# jedis连接池最大连接数
spring.redis.jedis.pool.max-active=100
# jedis连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.jedis.pool.max-wait=-1

# influxdb
spring.influxdb.url=http://${resource.influxdb.host:127.0.0.1}:${resource.influxdb.port:8086}
spring.influxdb.user=${resource.influxdb.user}
spring.influxdb.password=${resource.influxdb.password}
# influxdb数据库
spring.influxdb.database=base

# flyway 数据库版本升级控制
spring.flyway.enabled=true
# 验证错误时删除数据, 关闭
spring.flyway.clean-on-validation-error=false
# 允许清除数据操作, 不允许
spring.flyway.clean-disabled=true
# 数据库的url，账号密码
spring.flyway.url=${spring.datasource.url}
spring.flyway.user=${spring.datasource.username}
spring.flyway.password=${spring.datasource.password}
# 迁移表的表名
spring.flyway.table=t_migration_history
# 基于基线升级
spring.flyway.baseline-on-migrate=true
# 初次升级，从哪个版本进行升级
spring.flyway.baseline-version=1
# 迁移的时候, 是否校验
# 是否校验每个迁移过的文件?
# 检验迁移过的和现有的内容是否一样
spring.flyway.validate-on-migrate=false
# 文件上传的最大大小
spring.servlet.multipart.max-file-size=204800KB
# 文件请求的最大大小
spring.servlet.multipart.max-request-size=204800KB

# 文件上传基础路径
basePath=/opt/takin/shell/

# influxDB 性能分析数据库
spring.performance.influxdb.database=performance

# agent takin-web url 配置
agent.interactive.takin.web.url=http://${takin-web.out.url:127.0.0.1:${server.port}}/takin-web

# takin-cloud url 配置
takin.cloud.url=http://${takin-cloud.out.url:127.0.0.1:10010}/takin-cloud

# agent zk 配置
takin.config.zk.addr=${takin.config.zk.url:127.0.0.1:2181}

# amdb data url 配置
amdb.url.amdb=http://${amdb.out.url:127.0.0.1:10032}

# 脚本是否校验
script.check=true

# 是否开启流量验证，测试环境开启，生产环境关闭
link.flow.check.enable=${takin-web.link.flow.out.check:true}

# solr是否开启健康检查
management.health.solr.enabled=false

# Elasticsearch是否开启健康检查
management.health.elasticsearch.enabled=false
# 开启tomcat访问日志
server.tomcat.accesslog.enabled=true
# tomcat访问日志格式
server.tomcat.accesslog.pattern=%h %l %u %t "%r" %s %b %D %{User-Agent}i
# takin-web打包版本
takin.web.version=@project.version@

# mybatis-plus开启驼峰命名
mybatis-plus.configuration.map-underscore-to-camel-case=true
# mybatis-plus mapper文件扫描路径
mybatis-plus.mapper-locations[0]=classpath*:com/pamirs/takin/entity/mapper/**/*.xml
mybatis-plus.mapper-locations[1]=classpath*:mappers/**/*.xml

# 白名单文件
spring.config.whiteListPath=/opt/tro/conf/takin-web/api/confcenter/wbmnt/query/

# 大文件下载
remote.client.download.uri=/api/bigfile/download

# 文件url
file.upload.url=${takin.cloud.url}

# 文件上传路径
file.upload.script.path=${data.path:/data}/scriptfile

# 文件上传临时路径
file.upload.tmp.path=${data.path:/data}/scriptfile/temp

# 文件上传的用户目录
file.upload.user.data.dir= ${data.path:/data}/tmp

# license值
takin.license=5b06060a-17cb-4588-bb71-edd7f65035aa

# 远程调用自动加入白名单
remote.call.auto.join.white=true

# e2e允许条件技术节点的中间件名称
patrol.tech_node.middleware_name=http,dubbo,rocketmq,rabbitmq,kafka,elasticjob,grpc
# 聚合数据的类型 - E2E获取异常信息(0:AMDB,1,influxDB)
patrol.engine.type=0